<?php

namespace App\Form;

use App\Data\SearchData;
use App\Entity\Campus;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type\CheckboxType;
use Symfony\Component\Form\Extension\Core\Type\DateType;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;

class SearchForm extends AbstractType

{

    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            //Barre de recherche
            ->add('q', TextType::class, [
                'label'=>false,
                 'required'=>false,
                 'attr'=>[
                     'placeholder'=>'Rechercher'
                 ]
                ])

            ->add('campuses', EntityType::class, [
                'label' => false,
                'required'=>false,
                //Classe Ã  utiliser
                'class'=> Campus::class,
                //If set to true, radio buttons or checkboxes will be rendered (depending on the multiple value). If false, a select element will be rendered
                'expanded'=>false,
                //If true, the user will be able to select multiple options (as opposed to choosing just one option)
                'multiple'=>true,
            ])
            ->add('isOrganizer', CheckboxType::class, [
                'label'=> 'Sorties dont je suis l\'organisateur.ice',
                'required'=>false,
            ])
            ->add('isRegistered', CheckboxType::class, [
                'label'=> 'Sorties auxquelles je suis inscrit.e',
                'required'=>false,
                ])

            //Entre DATE1 et DATE2
            ->add('date1', DateType::class, [
                'widget'=>'single_text',
                'required'=>false,
                'label'=>false,

            ])
            ->add('date2', DateType::class, [
                'widget'=>'single_text',
                'required'=>false,
                'label'=>false,

            ])
        ;
    }

    public function configureOptions(OptionsResolver $resolver)
    {
        parent::configureOptions($resolver); // TODO: Change the autogenerated stub
    }
    public function getBlockPrefix()
    {
        return'';

    }


}